import bb.cascades 1.0
import QtMobility.sensors 1.2
import bb.cascades.maps 1.0
import QtMobilitySubset.location 1.1

Page
{
    Container
    {
        id: listViewContainer
        background: Color.Black
        
        layout: StackLayout {}
        
        MapView
        {
            id: mapView
            preferredHeight: 500
            preferredWidth: 720
            horizontalAlignment: HorizontalAlignment.Center
            verticalAlignment: VerticalAlignment.Bottom
            
            altitude: 3000
            latitude: 43.449488
            longitude: -80.406777
        }
        
        // The ListView that shows the progress of loading and result images
        ListView
        {
            id: listViewMapMode
            layout: StackListLayout
            {
                orientation: LayoutOrientation.LeftToRight
            }
            
            property int currentIndexInSection
            property int sectionSize
            property int leftToRight
            property double touchDownX
            property double moveThreshold: 100
            property MapView map: mapView

            flickMode: ListView.SingleItem;
            snapMode: ListView.LeadingEdge
            horizontalAlignment: HorizontalAlignment.Fill
            verticalAlignment: VerticalAlignment.Fill
            
            dataModel: listModel.model

            listItemComponents: ListItemComponent
            {
                Container
                {
                    preferredHeight: 640
                    preferredWidth: 720
                    
                    layout: DockLayout
                    {}
                    
                    onTouch: {
                        ListItem.view.currentIndexInSection = ListItem.indexInSection;
                        ListItem.view.sectionSize = ListItem.sectionSize
                        ListItem.view.map.latitude = ListItemData.latitude;
                        ListItem.view.map.longitude = ListItemData.longitude;
                        ListItem.view.map.altitude = ListItemData.altitude;
                    }
                    
                    // The ImageView that shows the loaded image after loading has finished without error
                    ImageView
                    {
                        id: imageMapView

                        horizontalAlignment: HorizontalAlignment.Fill
                        verticalAlignment: VerticalAlignment.Fill
                        scalingMethod: ScalingMethod.AspectFill
                            
                        image: ListItemData.imageSource
                    }
                    
                    Label {
                        horizontalAlignment: HorizontalAlignment.Center
                        verticalAlignment: VerticalAlignment.Top
                        preferredWidth: 500
                        text: imageMapView.imageSource;
                        multiline: true;
                        textStyle {
                            color: Color.Black
                        }
                    }
                }
            }
        }
    }
}